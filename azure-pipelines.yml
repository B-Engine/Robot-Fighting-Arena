# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'Lucas Subscription'

  # Web app name
  webAppName: BattleBots'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run buildProd --if-present
              npm run test --if-present
            displayName: 'npm install, build and test'

          - task: ArchiveFiles@2
            displayName: 'Archive dist'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
              includeRootFolder: true
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - task: ArchiveFiles@2
            displayName: 'Add package.json to artifact'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/package.json'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: false

          - task: ArchiveFiles@2
            displayName: 'Add process.json to artifact'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/process.json'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: false

          - task: PublishPipelineArtifact@0
            displayName: 'Publish pipeline artifacts'
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
